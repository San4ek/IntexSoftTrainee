services:
  auth-service:
    image: inqu1sitor/auth_service:latest
    ports:
      - "9000:9000"
    container_name: auth-service
    depends_on:
      auth-postgres:
        condition: service_healthy
      auth-redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://auth-postgres/auth_service
      SPRING_DATA_REDIS_HOST: auth-redis
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI: http://auth-service:9000/oauth2/jwks
    networks:
      - bridge_network

  user-service:
    image: inqu1sitor/user_service:latest
    ports:
      - "8081:8081"
    container_name: user-service
    depends_on:
      user-postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://user-postgres/user_service
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI: http://auth-service:9000/oauth2/jwks
    networks:
      - bridge_network

  gateway:
    image: inqu1sitor/gateway:latest
    ports:
      - "8080:8080"
    container_name: gateway
    depends_on:
      auth-redis:
        condition: service_healthy
    environment:
      SPRING_DATA_REDIS_HOST: auth-redis
    networks:
      - bridge_network

  mail-service:
    image: inqu1sitor/mail_service:latest
    container_name: mail-service
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
    networks:
      - bridge_network

  cart-service:
    image: eexxlliinn/cart-service:latest
    ports:
      - "8082:8082"
    container_name: cart-service
    depends_on:
      cart-postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://cart-postgres/cart-service
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI: http://auth-service:9000/oauth2/jwks
    networks:
      - bridge_network

  stock-service:
    image: eexxlliinn/stock-service:latest
    ports:
      - "8083:8083"
    container_name: stock-service
    depends_on:
      stock-postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://stock-postgres/stock-service
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI: http://auth-service:9000/oauth2/jwks
    networks:
      - bridge_network

  auth-postgres:
    image: postgres:latest
    container_name: auth-postgres-server
    restart: on-failure
    ports:
      - "5431:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Utermybest1
      POSTGRES_DB: auth_service
      PGUSER: postgres
    networks:
      - bridge_network
    volumes:
      - ./backup/auth-postgres:/var/lib/postgresql
    healthcheck:
      test: pg_isready
      interval: 5s
      timeout: 5s
      retries: 5

  user-postgres:
    image: postgres:latest
    container_name: user-postgres-server
    restart: on-failure
    ports:
      - "5430:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Utermybest1
      POSTGRES_DB: user_service
      PGUSER: postgres
    networks:
      - bridge_network
    volumes:
      - ./backup/user-postgres:/var/lib/postgresql
    healthcheck:
      test: pg_isready
      interval: 5s
      timeout: 5s
      retries: 5

  cart-postgres:
    image: postgres:latest
    container_name: cart-postgres-server
    restart: on-failure
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cart-service
      PGUSER: postgres
    networks:
      - bridge_network
    volumes:
      - ./backup/cart-postgres:/var/lib/postgresql
    healthcheck:
      test: pg_isready
      interval: 5s
      timeout: 5s
      retries: 5

  stock-postgres:
    image: postgres:latest
    container_name: stock-postgres-server
    restart: on-failure
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: stock-service
      PGUSER: postgres
    networks:
      - bridge_network
    volumes:
      - ./backup/stock-postgres:/var/lib/postgresql
    healthcheck:
      test: pg_isready
      interval: 5s
      timeout: 5s
      retries: 5

  auth-redis:
    image: redis:latest
    container_name: redis-server
    restart: on-failure
    ports:
      - "6379:6379"
    environment:
      ALLOW_EMPTY_PASSWORD: yes
    volumes:
      - ./backup/auth-redis:/data
    networks:
      - bridge_network
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbit-server
    restart: on-failure
    hostname: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: iNQU1SITOR
      RABBITMQ_DEFAULT_PASS: Utermybest1
    volumes:
      - ./backup/rabbitmq:/var/lib/rabbitmq
    networks:
      - bridge_network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

networks:
  bridge_network:
    driver: bridge